package bean;
public class Student{
   private long iD;
   private String name;

   public void setID(long iD){
      this.iD = iD; }

   public long getID(){
      return iD;}

   public void setName(String name){
      this.name = name; }

   public String getName(){
      return name; }
}

package connection;

import java.sql.*;

public class DataBaseConnection{
    private final String DBDriver ="org.apache.derby.jdbc.ClientDriver";
    private final String DBURL ="jdbc:derby://localhost:1527/myeclipse";
    private final String DBUSER ="classiccars";
    private final String DBPASSWORD ="classiccars";
    private Connection conn = null;
//构造器
    public DataBaseConnection(){
       try{
           Class.forName(DBDriver);
           conn = DriverManager.getConnection(DBURL,DBUSER,DBPASSWORD);
           }
        catch(Exception e){  }
                                 }

//获得连接
public Connection getConnection(){
return this.conn; }

//关闭连接
public void close() throws SQLException{
    this.conn.close(); }
} 

package dao;
import bean.*;
import java.util.*;
public interface StudentDAO{
    public void insert(Student s);
    public void update(Student s);
    public void delete(String iD);
    public Student findByID(long iD);
    public List<Student> findAll();
} 


@@ -0,0 +1,11 @@
package dao;
import bean.*;
import java.util.*;
public interface StudentDAO{
    public void insert(Student s);
    public void update(Student s);
    public void delete(String iD);
    public Student findByID(long iD);
    public List<Student> findAll();
} 


import bean.Student;
import dao.StudentDAO;
import java.sql.*;

import connection.DataBaseConnection;

public class StudentDAOIMP implements StudentDAO{
    // 添加操作
    public void insert(Student s){
        String sql = "INSERT INTO student (id, name) values (?,?)";
        PreparedStatement pstmt = null;
        DataBaseConnection conn = null;
        //针对数据库的具体操作
        try{
            conn = new DataBaseConnection();

            pstmt = conn.getConnection().prepareStatement(sql);
            pstmt.setLong(1,s.getID());
            //pstmt.setString(1,s.getID());
            pstmt.setString(2,s.getName());

            pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        }catch(Exception e){ }
    }

    public void update(Student s) {
        String sql = "update Student set name=? where id=?";
        PreparedStatement pstmt = null;
        DataBaseConnection conn = null;
        try{
            conn = new DataBaseConnection();

            pstmt = conn.getConnection().prepareStatement(sql);
            pstmt.setLong(1,s.getName());
            pstmt.setString(2,s.getID());

            pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        }catch(Exception e){ }
    }

    public void delete(String iD) {
        String sql = "delete from Student where ID=?";
        PreparedStatement pstmt = null;
        DataBaseConnection conn = null;
        try{
            conn = new DataBaseConnection();

            pstmt = conn.getConnection().prepareStatement(sql);
            pstmt.setString(1,s.getID());

            pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        }catch(Exception e){ }
    }

    public List<Student> findAll() {
        String sql = "select * from Student where ID=?";
        List<Student> list = null;
        PreparedStatement pstmt = null;
        DataBaseConnection conn = null;
        ResultSet rs = null;
        try{
            conn = new DataBaseConnection();

            pstmt = conn.getConnection().prepareStatement(sql);
            pstmt.setString(1,s.getID());

            rs = pstmt.executeQuery();
            Student s = new Student();
            while(rs.next()) {
                s.setID(rs.getSring("id"));
                s.setName(rs.getSring("name"));
                list.add(s);
            }
            pstmt.close();
            conn.close();
            rs.close();
        } catch(Exception e){ }
        return list;
    }

    public Student findByID(Long id) {
        String sql = "select * from Student where ID=?";
        List<Student> list = null;
        PreparedStatement pstmt = null;
        DataBaseConnection conn = null;
        ResultSet rs = null;
        try{
            conn = new DataBaseConnection();

            pstmt = conn.getConnection().prepareStatement(sql);
            pstmt.setString(1,s.getID());
            pstmt.setString(2,id);

            rs = pstmt.executeQuery();
            Student s = new Student();
            while(rs.next()) {
                s.setID(rs.getSring("id"));
                s.setName(rs.getSring("name"));
                list.add(s);
            }
            pstmt.close();
            conn.close();
            rs.close();
        } catch(Exception e){ } 
        return list.get(0);
    }

}
